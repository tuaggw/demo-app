name: Multi Substrate Deployment

on:
  workflow_dispatch:
    inputs:
      herokuDeploy:
        type: boolean
        description: Deploy to Heroku?
        default: true
      GCPDeploy:
        type: boolean
        description: Deploy to GCP?
        default: false
      appName:
        description: 'Heroku App Name'
        default: 'trust1-status-container-stg'
        type: choice
        options:
          - trust1-status-container-stg
          - trust1-status-container-prd
  push:
    branches: [ master ]

env:
  PROJECT_ID: trust-demo-354818
  GAR_LOCATION: us-central1
  REPOSITORY: images
  SERVICE: trust-demo-app
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Tests

      - uses: dorny/test-reporter@v1
        with:
          artifact: test-results
          name: test-report
          path: '*.xml'
          reporter: jest-junit 
      
      - name: Build, Push and Release a Docker container to Heroku
        uses: gonuit/heroku-docker-deploy@v1.3.3
        if: ${{ inputs.herokuDeploy == true }}
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ inputs.appName }}
          dockerfile_directory: ./
          dockerfile_name: Dockerfile
          process_type: web

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v0
        if: ${{ inputs.GCPDeploy == true }}
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          token_format: 'access_token'

      - name: Docker Auth
        uses: docker/login-action@v1
        if: ${{ inputs.GCPDeploy == true }}
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Setup GCloud CLI
        if: ${{ inputs.GCPDeploy == true }}
        run: |
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Build and Push Container
        if: ${{ inputs.GCPDeploy == true }}
        run: |
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0
        if: ${{ inputs.GCPDeploy == true }}
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}